## configure.ac
## LibExample:
## an example of using Automake and Libtool to build a shared library

AC_INIT([libcagl], [0.1], [nathangeffen@gmail.com], [cagl],
        [https://github.com/nathangeffen/libcag])
AC_PREREQ([2.59])
AM_INIT_AUTOMAKE([1.10 -Wall no-define])
AC_CONFIG_MACRO_DIR([m4])

# Generate two configuration headers; one for building the library itself with
# an autogenerated template, and a second one that will be installed alongside
# the library.
AC_CONFIG_HEADERS([config.h])
AC_PROG_CC
LT_INIT([disable-static])

AC_CHECK_FUNCS([memmove])
AC_CHECK_FUNCS([sqrt])
AC_CHECK_HEADERS([limits.h])
AC_CHECK_HEADERS([stdlib.h])
AC_CHECK_HEADERS([string.h])
AC_CHECK_HEADERS([float.h])
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_TYPE_SIZE_T

# Define these substitions here to keep all version information in one place.
# For information on how to properly maintain the library version information,
# refer to the libtool manual, section "Updating library version information":
# http://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html
AC_SUBST([CAGL_SO_VERSION], [1:1:0])
AC_SUBST([CAGL_API_VERSION], [0.1])

# Override the template file name of the generated .pc file, so that there
# is no need to rename the template file when the API version changes.
AC_CONFIG_FILES([Makefile
                 cagl-${CAGL_API_VERSION}.pc:cagl.pc.in])
AC_OUTPUT
